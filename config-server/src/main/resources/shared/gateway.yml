spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          authorization-uri: http://localhost:8180/auth/realms/my_realm/protocol/openid-connect/auth
          token-uri: http://localhost:8180/auth/realms/my_realm/protocol/openid-connect/token
#          issuer-uri: http://localhost:8180/auth/realms/my_realm

  cloud:
    gateway:
      routes:
        - id: tours-locations-layers
          uri: lb://tours-locations-layers
          predicates:
            - Path=/tours-locations-layers/**
        - id: users-manager
          uri: lb://users-manager
          predicates:
            - Path=/users-manager/**
        - id: files-uploader
          uri: lb://files-uploader
          predicates:
            - Path=/files-uploader/**
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
        add-to-simple-url-handler-mapping: true
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

---
spring:
  config:
    activate:
      on-profile: docker
  security:
    oauth2:
      resourceserver:
        jwt:
          authorization-uri: http://keycloak:8080/auth/realms/my_realm/protocol/openid-connect/auth
          token-uri: http://keycloak:8080/auth/realms/my_realm/protocol/openid-connect/token
#          issuer-uri: http://localhost:8180/auth/realms/my_realm

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-discovery-service:8761/eureka